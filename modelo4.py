# -*- coding: utf-8 -*-
"""modelo1.0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Q93ZcLgW37wIvAVj6oiF6ItY-ZJmf27R
"""

# streamlit_app.py

import streamlit as st
from PIL import Image
import numpy as np
import sys

try:
    import tensorflow as tf
    st.success("‚úÖ TensorFlow instalado com sucesso!")
    st.write(f"Vers√£o do TensorFlow: {tf.__version__}")
except ImportError:
    st.error("‚ùå TensorFlow n√£o est√° instalado. Verifique requirements.txt.")
    st.write("Bibliotecas instaladas:", sys.executable)
    st.stop()  # Interrompe o app se faltar TensorFlow

import tflite_runtime.interpreter as tflite
interpreter = tflite.Interpreter(model_path="modelo.tflite")  # Converta antes para .tflite

# Definindo o tamanho que o modelo espera
IMG_SIZE = (150, 150)  # Atualize se seu modelo usar outro tamanho

# Definindo as classes
class_names = ['adenocarcinoma de c√≥lon', 'adenocarcinoma de pulm√£o', 'adenocarcinoma escamoso', 'c√©lulas normais']

# T√≠tulo do app
st.title("Classificador de C√¢ncer de Pulm√£o e C√≥lon ü´Åüß¨")

st.write(
    """
    Este aplicativo classifica imagens de tecidos em diferentes tipos de c√¢ncer ou tecido normal.
    Fa√ßa upload de uma imagem para ver a predi√ß√£o do modelo.
    """
)

# Upload de imagem
uploaded_file = st.file_uploader("/content/lungaca98.jpeg", type=["jpg", "jpeg", "png"])

if uploaded_file is not None:
    image = Image.open(uploaded_file).convert('RGB')
    st.image(image, caption='Imagem enviada', use_column_width=True)

    # Pr√©-processamento
    img_array = np.array(image.resize(IMG_SIZE)) / 255.0
    img_array = np.expand_dims(img_array, axis=0)  # Adiciona batch dimension

    # Predi√ß√£o
    prediction = model.predict(img_array)
    predicted_class = class_names[np.argmax(prediction)]

    st.subheader('Resultado:')
    st.success(f'Predi√ß√£o: {predicted_class}')